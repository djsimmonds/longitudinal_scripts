types of analysis:

0) y~(N categorical vars)
	- null: y~cat.var(1:N-1)
	- y.labels, c.labels
	- loglik.llr, loglik.df, loglik.p
		- table: y rows, c columns
	- coef, coef.sim.m, coef.sim.sd, coef.p
		- table: y rows, #coef columns

1) y~age
	- null: y~1
	- y.labels, c.labels
	- loglik.llr, loglik.df, loglik.p
		- table: y rows, c columns
	- coef, coef.sim.m, coef.sim.sd, coef.p
		- table: y rows, #coef columns
	- pred, pred.sim.m, pred.sim.sd
		- graph: age X MI, null distribution and line (for each y)
	- pred.p
		- graph: age X pval, line (for each y)
		- heatmap: age X y, pval in color values

2) y~age*(1 continuous variable)
	- null: y~age
	- y.labels, c.labels
	- loglik.llr, loglik.df, loglik.p
		- table: y rows, c columns
	- coef, coef.sim.m, coef.sim.sd, coef.p
		- table: y rows, #coef columns
	- pred, pred.sim.m, pred.sim.sd
		- heatmap: age X cont.var, MI in boxes (for each y)
	- pred.p
		- graph: age X pval, line (for each y)
		- heatmap: age X y, binary for pval>thr, colors for levels
	- pred.p.dif
		- heatmap: age X y, pvals in boxes

3) y~age*(1 categorical variable)
	- null: y~age
	- y.labels, c.labels
	- loglik.llr, loglik.df, loglik.p
		- table: y rows, c columns
	- coef, coef.sim.m, coef.sim.sd, coef.p
		- table: y rows, #coef columns
	- pred, pred.sim.m, pred.sim.sd
		- graph: age X MI, null distribution and lines (for each y)
	- pred.p
		- heatmap: age X cont.var, pvals in boxes (for each y)
	- pred.p.dif
		- heatmap: age X y, pvals in boxes
	
4) y~age*(1 continuous variable)*(N categorical variables)
	- null: y~age*cont.var*cat.var(1:N-1)
	- y.labels, c.labels
	- loglik.llr, loglik.df, loglik.p
		- table: y rows, c columns
	- coef, coef.sim.m, coef.sim.sd, coef.p
		- table: y rows, #coef columns
	- pred, pred.sim.m, pred.sim.sd
		- heatmap: age X cont.var, MI in boxes (for each y and level of cat.var(1:N))
	- pred.p
		- heatmap: age X cont.var, pvals in boxes (for each y and level of cat.var(1:N))
	- pred.p.dif
		- heatmap: age X cont.var, pvals in boxes (for each y)
		- heatmap: age X y, pvals in boxes

5) y~age*(N categorical variables)
	- null: y~age*cat.var(1:N-1)
	- y.labels, c.labels
	- loglik.llr, loglik.df, loglik.p
		- table: y rows, c columns
	- coef, coef.sim.m, coef.sim.sd, coef.p, coef.p.abs, coef.p.sign
		- table: y rows, #coef columns
	- pred, pred.sim.m, pred.sim.sd
		- graph: age X MI, null distributions and lines (for each y)
	- pred.p
		- graph: age X pval, lines as in pred (for each y)
	- pred.p.dif
		- heatmap: age X y, pvals in boxes

--> need to get weights for behavior and add in



coef.est<-function(Y=data.,W=w.,W.=NULL,m1.=models$model[[m]],m0.=models$model[[1]],path=paste(setup$path,m,sep="/"),mixed=setup$mixed,ynames=setup$ynames)
{
	## gets indices of rows which are excluded in m1
	na<-m1.$na
	## if any excluded, adjust data and weight matrices
	## note: W. (an additional weighting matrix, e.g. for behavioral variables) already has NAs removed by the outlier script
	if(length(na)>0){
		Y<-Y[-na,]
		W<-W[-na,]
	}
	if(!is.null(W.) W<-W*W.
	## data frame for m1 (NAs removed)
	d<-m1.$data
	## updates models with appropriate data frame
	m0<-update(m0.$fit)
	m1<-update(m1.$fit)

	## estimates 

	## longitudinal
	if(mixed==TRUE){
		coef<-sapply(
			1:dim(Y)[2],
			function(y) {m1@pWt<-W[,y]; refit(m1,Y[,y])@fixef}
		)
		coef.p<-sapply(
			1:dim(Y)[2],
			function(y){
				coef.=coef[,y]
				m0@pWt<-W[,y] ## weights
				S=simulate(refit(m0,Y[,y]),nsim)
				m1@pWt<-W[,y] ## weights
				s.coef<-sapply(
					1:dim(S)[2],
					function(s) refit(m1,S[,s])@fixef
				)
				s.coef.m<-apply(s.coef,1,mean)
				s.coef.sd<-apply(s.coef,1,sd)
				pnorm(coef.,s.coef.m,s.coef.sd)
			}
		)
		
	## cross-sectional
	}else{
		X<-model.matrix(m1)
		coef<-sapply(1:dim(Y)[2], function(y) lm.wfit(X,Y[,y],W[,y])$coef)
		coef.p<-sapply(
			1:dim(Y)[2],
			function(y){
				coef.=coef[,y]
				S=simulate(update(m0,.~.,weights=W[,y]),nsim)
				s.coef<-sapply(1:dim(S)[2], function(s) lm.wfit(X,S[,s],W[,y])$coef)
				s.coef.m<-apply(s.coef,1,mean)
				s.coef.sd<-apply(s.coef,1,sd)
				as.numeric(pnorm(coef.,s.coef.m,s.coef.sd))			
			}
		)
	}
	
	## p-vals and direction of difference
	xnames<-attr(coef.p,"dimnames")[[1]]
	p<-1-abs(coef.p-0.5)*2
	p.sign<-sign(coef.p-0.5)	
	
	## p-values
	filename=paste(path,"coef.p",sep="/")
	sink(filename)
	cat("",ynames,"\n")
	sink()
	write.table(p,col.names=FALSE,row.names=xnames,file=filename,append=TRUE)

	## significance stars
	filename=paste(path,"coef.p.star",sep="/")
	sink(filename)
	cat("",ynames,"\n")
	sink()
	write.table(ifelse(p<.001,"***",ifelse(p<.01,"**",ifelse(p<.05,"*",""))),
		col.names=FALSE,row.names=xnames,file=filename,append=TRUE)

	## sign of difference (-1 of significantly lower, 1 if significantly higher)
	filename=paste(path,"coef.p.sign",sep="/")
	sink(filename)
	cat("",ynames,"\n")
	sink()
	write.table(p.sign,col.names=FALSE,row.names=xnames,file=filename,append=TRUE)
	
	"coef.est() completed"
}

deriv.est<-function(
	Y=data.,
	W=w.,
	W.=NULL,
	m1.=models$model[[m]],
	m0.=models$model[[models$con[[m]][c]]],
	path=paste(setup$path,m,sep="/"),
	deriv=setup$deriv,
	mixed=setup$mixed)
{
	na<-m1.$na
	if(length(na)>0){
		Y<-Y[-na,]
		W<-W[-na,]
	}
	if(!is.null(W.) W<-W*W.
	d<-m1.$data
	m0<-update(m0.$fit)
	m1<-update(m1.$fit)

	#deriv.subfn1()
	for(y in dim(Y)[2]){
		d[,1]<-Y[,y]
		if(is.null(W.)) d[,2]<-W[,y] else d[,2]<-W[,y]*W.
		m0<-update(m0)
		m1<-update(m1)

		#deriv.subfn2()
		

	}		

}

> d
	> y (response variable)
	> w (weights; could all be 1)
	> main (age)
	> numeric (vgs.mRT,vgs.cv,anti.percErr,anti.cv)
	> categorical1 (sex)
	> categorical2 (puberty)
	...
	> categoricalN

> m

	loglik.llr
	loglik.p
		y (# response variables) rows,
		c (# models to compare to) columns
	loglik.df
		c entries

	coef
	coef.sim.m		
	coef.sim.sd
	coef.p
		y rows,
		#coef columns

	pred
	pred.sim.m
	pred.sim.sd
	pred.p
		#total prediction intervals entries
	pred.p.dif
		#main (age) prediction intervals entries
